{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNweNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","alt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aae07eff.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sgin In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"../components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\">\n          Continue with Google\n        </button>\n        <button onClick={onSocialClick} name=\"github\">\n          Continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"../fbase\";\nimport { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNweNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      if (nweetObj.attachmentUrl !== \"\") {\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n      }\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweNweet(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input onChange={onChange} value={newNweet} required />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img\n              src={nweetObj.attachmentUrl}\n              width=\"50px\"\n              height=\"50px\"\n              alt=\"\"\n            />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import { dbService, storageService } from \"../fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    await dbService.collection(\"nweets\").add({\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    });\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    event.preventDefault();\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    if (Boolean(theFile)) {\n      reader.readAsDataURL(theFile);\n    }\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        value={nweet}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's on your mind?\"\n        maxLength={120}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Nweet\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" alt=\"\" />\n          <button onClick={onClearAttachment}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import { dbService } from \"../fbase\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"nweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const newArray = snapshot.docs.map((document) => ({\n          id: document.id,\n          ...document.data(),\n        }));\n        setNweets(newArray);\n      });\n  }, []);\n\n  return (\n    <>\n      <NweetFactory userObj={userObj} />\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import { authService, dbService } from \"../fbase\";\nimport { useHistory } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"../components/Nweet\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n\nexport default Profile;\n","import { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={refreshUser} userObj={userObj} />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}